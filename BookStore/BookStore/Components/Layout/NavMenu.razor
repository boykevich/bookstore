@implements IDisposable
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BookStore</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <!-- Home -->
        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center gap-2" href="" Match="NavLinkMatch.All">
                <i class="bi bi-house-door-fill" style="font-size: 1.2rem; position: relative; top: -14px;"></i>
                <span>Home</span>
            </NavLink>
        </div>

        <!-- Admin -->
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link d-flex align-items-center gap-2" href="/admin">
                    <i class="bi bi-shield-lock-fill" style="font-size: 1.2rem; position: relative; top: -14px;"></i>
                    <span>Admin</span>
                </NavLink>
            </div>
        </AuthorizeView>

        <!-- Cart -->
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="cartpage">
                        <i class="bi bi-cart-fill" style="font-size: 1.2rem; position: relative; top: -14px;"></i>
                        <span>Cart</span>
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <!-- Purchased Books -->
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="PurchasedBooks">
                        <i class="bi bi-book-fill" style="font-size: 1.2rem; position: relative; top: -14px;"></i>
                        <span>Purchased Books</span>
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <!-- Profile & Logout -->
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="Account/Manage">
                        <i class="bi bi-person-circle" style="font-size: 1.2rem; position: relative; top: -14px;"></i>
                        <span>Profile</span>
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post" class="m-0 p-0">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <div class="nav-link d-flex align-items-center gap-2 px-3 py-2 w-100" style="cursor: pointer;" onclick="this.closest('form').submit()">
                            <i class="bi bi-box-arrow-left" style="font-size: 1.2rem; position: relative; top: -14px;"></i>
                            <span>Logout</span>
                        </div>
                    </form>
                </div>
            </Authorized>

            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="Account/Login">
                        <i class="bi bi-box-arrow-in-right" style="font-size: 1.2rem; position: relative; top: -13px;"></i>
                        <span>Login</span>
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
