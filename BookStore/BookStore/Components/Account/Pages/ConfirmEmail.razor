@page "/Account/ConfirmEmail"
@using System.Text
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Identity
@using BookStore.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@inject ILogger<ConfirmEmail> Logger

<PageTitle>Confirm Email</PageTitle>

@if (confirmationMessage != null)
{
    <div class="alert alert-success">@confirmationMessage</div>
}
else
{
    <p>Processing...</p>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string? userId { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? code { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? returnUrl { get; set; }

    private string? confirmationMessage;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(userId) || string.IsNullOrEmpty(code))
        {
            confirmationMessage = "Некоректне посилання підтвердження.";
            return;
        }

        // Декодування токена
        var decodedCode = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(code));
        var user = await UserManager.FindByIdAsync(userId);
        if (user == null)
        {
            confirmationMessage = "Користувача не знайдено.";
            return;
        }

        var result = await UserManager.ConfirmEmailAsync(user, decodedCode);
        if (result.Succeeded)
        {
            confirmationMessage = "Email успішно підтверджено. Тепер ви можете увійти в систему.";

            // За бажанням, можна автоматично виконати вхід:
            // await SignInManager.SignInAsync(user, isPersistent: false);
            // NavigationManager.NavigateTo(returnUrl ?? "/");
        }
        else
        {
            confirmationMessage = "Помилка підтвердження email.";
        }
    }
}
